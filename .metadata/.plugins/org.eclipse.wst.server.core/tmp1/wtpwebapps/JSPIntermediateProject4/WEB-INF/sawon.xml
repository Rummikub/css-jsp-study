<?xml version="1.0" encoding="UTF-8"?>
<!-- 
			XML => 사용자 정의 (지원하는 태그가 없음)
			===  문서에 데이터를 저장하는 목적으로 사용
					================================ <태그>데이터</태그> | <태그 속성="데이터"/> | <태그 속성="데이터">데이터</태그>
						- 모든 운영체제 호환 good => 언어와 상관없이 파싱이 된다(XML데이터 읽는 것)
						- 문서형 데이터베이스 
						- 단점 : 문서가 길어지면 속도 늦어짐
						   사용자 정의 => 태그를 알아보기 어려울 수 있음
						   시멘틱 태그 사용 =  HTML5
						   		-HTML4 => 추상적 태그
						   			<object><embed> 
						   		-HTML5  => 알아보기 쉽게 제작
						   			<video><audio>
						   			
						   			=> XML을 이용하는 프로그램 ; MyBatis, Spring, Kotlin, ajax, react, vue    | JS=>JSX  / JavaScript => JavaScript+Xml
				1) xml 생성방법
					-	태그
						1. 여는 태그			==================> <table> 
						2. 닫는 태그														</table>
						3. 빈태그 (empty)												<br/> <input/> <img/>
						=================================================
						문법)
								1)	최상위 태그를 가지고 있다
									<a>aaa</a>
									<b>bbb</b> => Error
									
									<c>				=> 루트는 1개가 있어야 됨
										<a>aaa</a>
										<b>bbb</b>
									</c>
									
								2) 여는 태그/ 닫는 태그가 반드시 존재
									<a><b><c>aaa</b></c></a> -> Error
								
								3) 태그나 속성은 대소문자를 구분함
									<a> =! <A>
								4) 속성값은 반드시 ""
								5) 태그를 만들 때 숫자 사용가능 -> 앞에 사용은 불가
									<1a>(X) <a1>(O)
								6) 키워드는 사용할 수 없다 <xml>
								7) 태그는 공백을 줄 수 없다
					-	속성
				2) DTD 파일
				3) 자바에서 파싱
 -->
 <!-- 
 				DOM ; 계층구조  ~ tree형태로 구축
 				= 자바에서 파싱
 				= DOM vs SAX(Spring,MyBatis)방식
 					===		===
 					돔 ; 메모리에 저장 -> 제어
 					삭스; 읽기전용 (수정,삭제,추가가 불가능)
  -->
 <sawon> <!-- 데이터베이스 테이블과 같은 역할 -->
 	<list>	<!--  데이터 베이스 row -->
 		<name>홍길동</name>  <!--  데이터 베이스 column -->
 		<addr>서울</addr>
 		<sex>남자</sex>
 	</list>
 	
 	<list>
 		<name>심청이</name>
 		<addr>경기</addr>
 		<sex>여자</sex>
 	</list>
 	
 	<list>
 		<name>박문수</name>
 		<addr>강원</addr>
 		<sex>남자</sex>
 	</list>
 </sawon>