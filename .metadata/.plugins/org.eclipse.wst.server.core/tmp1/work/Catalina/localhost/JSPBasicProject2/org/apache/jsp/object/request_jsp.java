/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.50
 * Generated at: 2020-03-10 02:58:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.object;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class request_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!-- \r\n");
      out.write("\t내장객체 (기본객체)  = 9개\r\n");
      out.write("\t   ; jsp가 자동으로 미리 생성해둔 객체들\r\n");
      out.write("\t\tHttpServletRequest request\r\n");
      out.write("\t\tHttpServletResponse response\t\t\r\n");
      out.write("\t\t=========================== 오늘 배울 부분\t   - 답글형 게시판\r\n");
      out.write("\t\tPageContext pageContext;\r\n");
      out.write("\t\tHttpSession session = null;    ------------------------------------ 댓글형 게시판\r\n");
      out.write("\t\tServletContext application;\r\n");
      out.write("\t\tServletConfig config;\r\n");
      out.write("\t\tJspWriter out = null;\r\n");
      out.write("\t\tObject page = this;\r\n");
      out.write("\t\tJspWriter _jspx_out = null;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\ttry절 안 부분 = 코딩\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t1) Request\r\n");
      out.write("\t\t\t= 사용자 요청 정보\r\n");
      out.write("\t\t\t\t★(1) String getParameter()  ->단일값    \tex)list.jsp?page=1&no=10\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetParameter(\"page\")\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetParameter(\"no\") \r\n");
      out.write("\t\t\t\t★(2) String [] getParameterValues() ->다중값\tex) list.jsp?no=1&no=2&no=3\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetParameterValues(\"no\");  ==> checkbox,select (multi)\r\n");
      out.write("\t\t\t\t★(3) setCharacterEncoding() -> 한글 변환    (byte > 한글로 디코딩)\r\n");
      out.write("브라우저에 자바 검색 ; oq=+%EC%9E%90%EB%B0%94 => 자바 라는 byte표현임. 이걸 바꿔주는게 인코딩 <-> 디코딩\t\t\t\r\n");
      out.write("\t\t\t= 사용자 브라우저 정보\r\n");
      out.write("\t\t\t\t★(1) getRemoteAddr() = 사용자 IP\r\n");
      out.write("\t\t\t\t(2) getContentType() = text/html, tex/xml\r\n");
      out.write("\t\t\t\t(3) getProtocol() = 사용자가 이용한 프로토콜 = http, https, ws (websocket)\r\n");
      out.write("\t\t\t\t(4) getMethod() = GET/POST\r\n");
      out.write("\t\t\t\t★(5) getRequestURI() = \r\n");
      out.write("\t\t\t\t★(6) getContextPath() =\r\n");
      out.write("\t\t\t\thttp://localhost/JSPBasicProject2/object/request.jsp  -> URL ,  getRequestURL \r\n");
      out.write("\t\t\t\t/JSPBasicProject2/object/request.jsp -> URI, getRequestURI\r\n");
      out.write("\t\t\t\t/JSPBasicProject2 -> default , getContextPath\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t= 서버 정보 \r\n");
      out.write("\t\t\t\t(1) getServerName() -> localhost\r\n");
      out.write("\t\t\t\t(2) getServerPort() -> 80\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t= 데이터 추가 정보\r\n");
      out.write("\t\t\t\t(1) setAttribute() = 데이터 추가     ( Oracle의 DB에서 VO를 request해올 때 필요)\r\n");
      out.write("\t\t\t\t(2) getAttribute() = 추가된 데이터 읽기\r\n");
      out.write(" -->\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Request</title>\r\n");
      out.write("<!-- 자바스크립트로 유효성 검사\r\n");
      out.write("\t\t1) 데이터형 \r\n");
      out.write("\t\t\tvar : 자동 지정 변수\r\n");
      out.write("\t\t\t\t\tvar a=1 => a(int)\r\n");
      out.write("\t\t\t\t\tvar a=10.5 => a(double)\r\n");
      out.write("\t\t\t\t\tvar a='admin' => String\r\n");
      out.write("\t\t\t\t\tvar a=\"admin\" => String\r\n");
      out.write("\t\t\t\t\tvar a=[]  => Array  ===> [10,10.5,\"\",{}]\r\n");
      out.write("\t\t\t\t\tvar a={}  => Object\r\n");
      out.write("\t\t\t\t\t================================= var短 (사용범위 불명확)\r\n");
      out.write("\t\t2) 연산자 처리 : 산술(+-*/) 비교(== != < > <= >=)  논리( && ||) 대입 (+= = -=)\r\n");
      out.write("\t3) 제어문  : if , for , if ~else if ~ else, do ~while ...\r\n");
      out.write("\t\t4) 제공하는 함수 \r\n");
      out.write("\t\t\tfunction func_name (addr)            ===> 매개변수 var 쓰지 않음\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tvar func=function(){\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t★람다식 (권장)\r\n");
      out.write("\t\t\tvar func=()=> {\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t5) 객체 구조\r\n");
      out.write("\t\t\t window: 브라우저 => open\r\n");
      out.write("\t\t\t document : 출력화면\r\n");
      out.write("\t\t\t form: 입력창\r\n");
      out.write("\t\t\t location: 화면 이동\r\n");
      out.write("\t\t\t history: 이전 => back(), forward() => go()\r\n");
      out.write("\t\t6) 사용자 정의 함수\r\n");
      out.write(" -->\r\n");
      out.write(" <!-- 유효성 검사 ; 이름/ 소개를 안썼을 경우의 처리  = 강제 입력-->\r\n");
      out.write("<!-- <script type=\"text/javascript\">\r\n");
      out.write("function send()\r\n");
      out.write("{\t\r\n");
      out.write("\tvar name=document.frm.name.value;\r\n");
      out.write("\tif(name.trim()==\"\")\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\talert(\"이름을 입력하시오\");\r\n");
      out.write("\t\t\tdocument.frm.name.focus(); // 이름 입력하게 커서를 띄워라\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\tvar content=document.frm.content.value;\r\n");
      out.write("\tif(content.trim()==\"\")\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\talert(\"내용을 입력하시오\");\r\n");
      out.write("\t\t\tdocument.frm.content.focus(); // 이름 입력하게 커서를 띄워라\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\tdocument.frm.submit();\r\n");
      out.write("}\r\n");
      out.write("</script> -->\r\n");
      out.write("<!-- Jquery 라이브러리를 사용해 보자 -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"http://code.jquery.com/jquery.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("//window.onload (이미 브라우저가 띄워져 있는 상태에서 실행이 되어야 한다)\r\n");
      out.write("$(function() {\r\n");
      out.write("\t$('#btn').click(function(){\r\n");
      out.write("\t\t\tvar name=$('#name').val();\r\n");
      out.write("\t\t\tif(name.trim()==\"\")\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\talert(\"이름을 입력하시오\");\r\n");
      out.write("\t\t\t\t$('#name').focus(); // 이름 입력하게 커서를 띄워라\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar content=$('#content').val();\r\n");
      out.write("\t\tif(content.trim()==\"\")\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\talert(\"내용을 입력하시오\");\r\n");
      out.write("\t\t\t\t$('#content').focus(); // 이름 입력하게 커서를 띄워라\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$('#frm').submit();\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t\t<!--  데이터 전송 ; request   / 값 넘겨줄 때 value의 name 꼭 줘야 함  / form 태그 ( 값을 넘겨줄 때 사용)  / jsp의 값은 HTML아닌  jsp만 받을 수 있다-->\r\n");
      out.write("\t\t<center>\r\n");
      out.write("\t\t\t<h1>개인 정보</h1>\r\n");
      out.write("\t\t\t<form method=post  action=\"request_ok.jsp\"  name=frm  id=frm> \r\n");
      out.write("\t\t\t\t<table border=1 width=450>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th width=20%>이름</th>\r\n");
      out.write("\t\t\t\t\t\t<td width=80%><input type=text name=name size=15  id=name></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th width=20%>성별</th>\r\n");
      out.write("\t\t\t\t\t\t<td width=80%>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=radio name=sex value=\"남자\" checked>남자\r\n");
      out.write("\t\t\t\t\t\t\t<input type=radio name=sex value=\"여자\" >여자\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th width=20%>전화</th>\r\n");
      out.write("\t\t\t\t\t\t<td width=80%>\r\n");
      out.write("\t\t\t\t\t\t\t<select name=tel1>\r\n");
      out.write("\t\t\t\t\t\t\t\t<option>02</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t<option>031</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t<option>041</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t<option>051</option>\r\n");
      out.write("\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th width=20%>취미</th>\r\n");
      out.write("\t\t\t\t\t\t<td width=80%>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"checkbox\" name=hobby  value=운동>운동\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"checkbox\" name=hobby  value=게임>게임\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"checkbox\" name=hobby  value=낚시>낚시\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"checkbox\" name=hobby  value=독서>독서\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"checkbox\" name=hobby  value=등산>등산\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th width=20%>소개</th>\r\n");
      out.write("\t\t\t\t\t\t<td width=80%>\r\n");
      out.write("\t\t\t\t\t\t\t<textarea rows=\"5\" cols=\"35\" name=content  id=content></textarea>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"2\"  align=\"center\">\r\n");
      out.write("\t\t\t\t\t\t \t<input type=button  value=전송 id=btn>   \r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t</center>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
